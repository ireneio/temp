version: 2
defaults: &defaults
  docker:
    - image: circleci/node:9.11.1
  working_directory: ~/repo

check-patches: &check-patches
  name: Check patches
  command: |
    for patch in $(ls ./patches); do
      cat ./patches/$patch >> patches.json
    done

restore-cache: &restore-cache
  keys:
    - dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.json" }}

save-cache: &save-cache
  key: dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.json" }}
  paths:
    - node_modules

restore-prod-cache: &restore-prod-cache
  keys:
    - prod-{{ .Environment.CIRCLE_SHA1 }}

save-prod-cache: &save-prod-cache
  key: prod-{{ .Environment.CIRCLE_SHA1 }}
  paths:
    - packages/meep-ui/lib
    - packages/store/src/.next
    - packages/store/lib

deploy-docker: &deploy-docker
  name: Deploy docker
  command: |
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/build_docker.sh" \
      --parallel \
      --stream \
      --ignore @meepshop/meep-ui \
      --ignore @meepshop/test-*
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/deploy_k8s.sh" \
      --parallel \
      --stream \
      --ignore @meepshop/meep-ui \
      --ignore @meepshop/test-*

restore-prod-cache: &restore-prod-cache
  keys:
    - prod-{{ .Environment.CIRCLE_SHA1 }}

save-prod-cache: &save-prod-cache
  key: prod-{{ .Environment.CIRCLE_SHA1 }}
  paths:
    - packages/meep-ui/lib
    - packages/store/src/.next
    - packages/store/lib

deploy-docker: &deploy-docker
  name: Deploy docker
  command: |
    cp -r ./patches ./packages/patches
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/build_docker.sh" \
      --parallel \
      --stream \
      --ignore @meepshop/meep-ui \
      --ignore @meepshop/test-*
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/deploy_k8s.sh" \
      --parallel \
      --stream \
      --ignore @meepshop/meep-ui \
      --ignore @meepshop/test-*

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache

      - run:
          name: Install packages
          command: yarn install:all
      - save_cache: *save-cache

  lint-and-test:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap

      - run:
          name: Check code style
          command: |
            yarn prod @meepshop/store
            yarn lint .
            yarn tsc

      - save_cache: *save-prod-cache

  deploy-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install packages
          command: yarn install:all
      - run:
          name: Build prod
          command: yarn prod @meepshop/store
      - setup_remote_docker
      - run: *deploy-docker

  deploy-test-branch:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap
      - restore_cache: *restore-prod-cache
      - setup_remote_docker
      - run: *deploy-docker

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap
      - restore_cache: *restore-prod-cache
      - setup_remote_docker
      - run: *deploy-docker

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/

      - lint-and-test:
          requires:
            - install
          filters:
            tags:
              only: /.*/

      - deploy-test-branch:
          context: org-global
          requires:
            - lint-and-test
          filters:
            branches:
              only: /test-.*/

      - deploy:
          context: org-global
          requires:
            - lint-and-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
