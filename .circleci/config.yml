version: 2
defaults: &defaults
  docker:
    - image: circleci/node:10.15.3-browsers
  working_directory: ~/repo

gcloud-defaults: &gcloud-defaults
  docker:
    - image: google/cloud-sdk
  working_directory: ~/repo

check-patches: &check-patches
  name: Check patches
  command: |
    for patch in $(ls ./patches); do
      cat ./patches/$patch >> patches.lock
    done

restore-cache: &restore-cache
  keys:
    - dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.lock" }}

save-cache: &save-cache
  key: dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.lock" }}
  paths:
    - node_modules

gcloud-login: &gcloud-login
  name: Gcloud login
  command: |
    echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
    gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

deploy-docker: &deploy-docker
  name: Deploy docker
  command: |
    yarn tsc:basic
    yarn prod
    yarn lerna run prod \
      --parallel \
      --stream \
      --scope @meepshop/store \
      --scope @admin/server
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/build_docker.sh" \
      --parallel \
      --stream \
      --scope @admin/server \
      --scope @meepshop/store
    ./.circleci/bin/install.sh
    yarn lerna exec \
      "${CIRCLE_WORKING_DIRECTORY}/.circleci/bin/deploy_k8s.sh" \
      --parallel \
      --stream \
      --scope @admin/server \
      --scope @meepshop/store

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches

      - restore_cache: *restore-cache
      - run:
          name: Install packages
          command: yarn install:all
      - save_cache: *save-cache

  lint-and-test:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap

      - run:
          name: Check locale files
          command: |
            make babel-all OPTION="--scope @meepshop/locale-parser"
            yarn locale-parser check-keys @meepshop/store
            yarn locale-parser check-keys @admin/server

      - run:
          name: Check code style
          command: |
            #TODO: remove after removing @meesphop/meep-ui
            yarn prod
            yarn tsc
            yarn lint .

      - run:
          name: Unit testing
          command: yarn test
      - store_artifacts:
          path: coverage

  upload-storybook:
    <<: *gcloud-defaults
    steps:
      - checkout
      - run: *gcloud-login
      - run: *check-patches
      - restore_cache: *restore-cache
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt update -y && apt install yarn -y
            mv /home/circleci/repo/node_modules ~/repo/node_modules
      - run:
          name: Build storybook static
          command: |
            yarn lerna bootstrap
            make babel-all OPTION="--scope @meepshop/locale-parser"
            yarn storybook:static
      - run:
          name: Upload storybook
          command: |
            gsutil cp -r ./storybook/* gs://storybook.meepshop.com/
            gsutil iam ch allUsers:objectViewer gs://storybook.meepshop.com/

  upload-images:
    <<: *gcloud-defaults
    steps:
      - checkout
      - run: *gcloud-login
      - run: ./.circleci/bin/upload_images.sh

  deploy-test-branch:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap
      - setup_remote_docker
      - run: *deploy-docker

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run: *check-patches
      - restore_cache: *restore-cache
      - run: yarn lerna bootstrap
      - setup_remote_docker
      - run: *deploy-docker

  deploy-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install packages
          command: yarn install:all
      - setup_remote_docker
      - run: *deploy-docker

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/

      - lint-and-test:
          context: org-global
          requires:
            - install
          filters:
            branches:
              ignore: /test-.*/
            tags:
              ignore: /.*/

      - upload-storybook:
          context: org-global
          requires:
            - install
          filters:
            branches:
              only: /master/

      - upload-images:
          context: org-global

      - deploy-test-branch:
          context: org-global
          requires:
            - install
          filters:
            branches:
              only: /test-.*/

      - deploy:
          context: org-global
          requires:
            - install
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
